C51 COMPILER V9.51   USERTASK                                                              06/07/2018 15:04:25 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE USERTASK
OBJECT MODULE PLACED IN ..\object\UserTask.obj
COMPILER INVOKED BY: E:\StudySoftWareInstall\keil4\C51\BIN\C51.EXE ..\user_files\UserTask.c BROWSE INCDIR(..\user_files)
                    - DEBUG OBJECTEXTEND PRINT(.\UserTask.lst) TABS(2) OBJECT(..\object\UserTask.obj)

line level    source

   1          #include"Stc12c5a.h"
   2          #include"Global.h"
   3          #include"IO.h"
   4          #include"DS18B20.h"
   5          #include"EEProm.h"
   6          #include"MC20.h"
   7          
   8          void AtituCtrMotor()
   9          {
  10   1        static INT8U High1MotorFlg=0;
  11   1        static INT8U High2MotorFlg=0;
  12   1        static INT8U High3MotorFlg=0;
  13   1        static xdata INT32S Grp1HighOld=0;
  14   1        static xdata INT32S Grp2HighOld=0;
  15   1        static xdata INT32S Grp3HighOld=0;
  16   1        static xdata INT32U Grp1HTimeTemp=0;
  17   1        static xdata INT32U Grp2HTimeTemp=0;
  18   1        static xdata INT32U Grp3HTimeTemp=0;
  19   1        INT32S HighTemp=0;
  20   1      
  21   1        if(sDeviceInfoEE.sDevInfBit.HighGrp1En == Enable)
  22   1          {
  23   2          HighTemp = (INT32S)sDeviceInfoEE.HighGrp1;
  24   2          
  25   2              if(High1MotorFlg < 3)
  26   2              {
  27   3            if((sGPSDtBackUp.dwAtitude + MOTOR_PREPAER) >= HighTemp)
  28   3            {
  29   4              if(High1MotorFlg == 0)
  30   4              {
  31   5                High1MotorFlg = 1;
  32   5                Grp1HTimeTemp = GlabalTimeCnt;
  33   5              }
  34   4              else if(High1MotorFlg >= 1)
  35   4              {
  36   5                if(GlabalTimeCnt < (Grp1HTimeTemp + 10))
  37   5                {
  38   6                  if(sGPSDtBackUp.dwAtitude!= Grp1HighOld)
  39   6                  {
  40   7                    High1MotorFlg++;
  41   7                      
  42   7                    if(High1MotorFlg > 2)
  43   7                    {
  44   8                      Grp1HTimeTemp = GlabalTimeCnt;
  45   8                    }
  46   7                  }
  47   6                }
  48   5                else
  49   5                {
  50   6                  High1MotorFlg = 0;
  51   6                }
  52   5              }
  53   4            }
  54   3            else
C51 COMPILER V9.51   USERTASK                                                              06/07/2018 15:04:25 PAGE 2   

  55   3            {
  56   4              High1MotorFlg = 0;
  57   4            }
  58   3              }
  59   2      
  60   2              if(High1MotorFlg == 3)
  61   2              {
  62   3            if(GlabalTimeCnt < (Grp1HTimeTemp + sDeviceInfoEE.HighGrp1_Time))
  63   3            {
  64   4              Set_IO(MOTER_PORT,MOTER_PIN);
  65   4            }
  66   3            else
  67   3            {
  68   4              High1MotorFlg = 4;
  69   4              Reset_IO(MOTER_PORT,MOTER_PIN);
  70   4            }
  71   3          }
  72   2          
  73   2          Grp1HighOld = sGPSDtBackUp.dwAtitude;
  74   2        }
  75   1      
  76   1        if(sDeviceInfoEE.sDevInfBit.HighGrp2En == Enable)
  77   1          {
  78   2          HighTemp = (INT32S)sDeviceInfoEE.HighGrp2;
  79   2          
  80   2              if(High2MotorFlg < 3)
  81   2              {
  82   3            if((sGPSDtBackUp.dwAtitude + MOTOR_PREPAER) >= HighTemp)
  83   3            {
  84   4              if(High2MotorFlg == 0)
  85   4              {
  86   5                High2MotorFlg = 1;
  87   5                Grp2HTimeTemp = GlabalTimeCnt;
  88   5              }
  89   4              else if(High2MotorFlg >= 1)
  90   4              {
  91   5                if(GlabalTimeCnt < (Grp2HTimeTemp + 10))
  92   5                {
  93   6                  if(sGPSDtBackUp.dwAtitude!= Grp2HighOld)
  94   6                  {
  95   7                    High2MotorFlg++;
  96   7                      
  97   7                    if(High2MotorFlg > 2)
  98   7                    {
  99   8                      Grp2HTimeTemp = GlabalTimeCnt;
 100   8                    }
 101   7                  }
 102   6                }
 103   5                else
 104   5                {
 105   6                  High2MotorFlg = 0;
 106   6                }
 107   5              }
 108   4            }
 109   3            else
 110   3            {
 111   4              High2MotorFlg = 0;
 112   4            }
 113   3              }
 114   2      
 115   2              if(High2MotorFlg == 3)
 116   2              {
C51 COMPILER V9.51   USERTASK                                                              06/07/2018 15:04:25 PAGE 3   

 117   3            if(GlabalTimeCnt < (Grp2HTimeTemp + sDeviceInfoEE.HighGrp2_Time))
 118   3            {
 119   4              Set_IO(MOTER_PORT,MOTER_PIN);
 120   4            }
 121   3            else
 122   3            {
 123   4              High2MotorFlg = 4;
 124   4              Reset_IO(MOTER_PORT,MOTER_PIN);
 125   4            }
 126   3          }
 127   2          
 128   2          Grp2HighOld = sGPSDtBackUp.dwAtitude;
 129   2        }
 130   1      
 131   1        if(sDeviceInfoEE.sDevInfBit.HighGrp3En == Enable)
 132   1          {
 133   2          HighTemp = (INT32S)sDeviceInfoEE.HighGrp3;
 134   2          
 135   2              if(High3MotorFlg < 3)
 136   2              {
 137   3            if((sGPSDtBackUp.dwAtitude + MOTOR_PREPAER) >= HighTemp)
 138   3            {
 139   4              if(High3MotorFlg == 0)
 140   4              {
 141   5                High3MotorFlg = 1;
 142   5                Grp3HTimeTemp = GlabalTimeCnt;
 143   5              }
 144   4              else if(High3MotorFlg >= 1)
 145   4              {
 146   5                if(GlabalTimeCnt < (Grp3HTimeTemp + 10))
 147   5                {
 148   6                  if(sGPSDtBackUp.dwAtitude!= Grp3HighOld)
 149   6                  {
 150   7                    High3MotorFlg++;
 151   7                      
 152   7                    if(High3MotorFlg > 2)
 153   7                    {
 154   8                      Grp3HTimeTemp = GlabalTimeCnt;
 155   8                    }
 156   7                  }
 157   6                }
 158   5                else
 159   5                {
 160   6                  High3MotorFlg = 0;
 161   6                }
 162   5              }
 163   4            }
 164   3            else
 165   3            {
 166   4              High3MotorFlg = 0;
 167   4            }
 168   3              }
 169   2      
 170   2              if(High3MotorFlg == 3)
 171   2              {
 172   3            if(GlabalTimeCnt < (Grp3HTimeTemp + sDeviceInfoEE.HighGrp3_Time))
 173   3            {
 174   4              Set_IO(MOTER_PORT,MOTER_PIN);
 175   4            }
 176   3            else
 177   3            {
 178   4              High3MotorFlg = 4;
C51 COMPILER V9.51   USERTASK                                                              06/07/2018 15:04:25 PAGE 4   

 179   4              Reset_IO(MOTER_PORT,MOTER_PIN);
 180   4            }
 181   3          }
 182   2          
 183   2          Grp3HighOld = sGPSDtBackUp.dwAtitude;
 184   2        }
 185   1      }
 186          
 187          void TimeCtrMotor()
 188          {
 189   1        if(sDeviceInfoEE.sDevInfBit.TimerGrp1En == Enable)
 190   1        {
 191   2          if((GlabalTimeCnt>sDeviceInfoEE.TimerGrp1) && (GlabalTimeCnt<(sDeviceInfoEE.TimerGrp1_Time+sDeviceInfoEE
             -.TimerGrp1)))
 192   2          {
 193   3            Set_IO(MOTER_PORT,MOTER_PIN);
 194   3          }
 195   2          else
 196   2          {
 197   3            Reset_IO(MOTER_PORT,MOTER_PIN);
 198   3          }
 199   2        }
 200   1        if(sDeviceInfoEE.sDevInfBit.TimerGrp2En == Enable)
 201   1        {
 202   2          if((GlabalTimeCnt>sDeviceInfoEE.TimerGrp2) && (GlabalTimeCnt<(sDeviceInfoEE.TimerGrp2_Time+sDeviceInfoEE
             -.TimerGrp2)))
 203   2          {
 204   3            Set_IO(MOTER_PORT,MOTER_PIN);
 205   3          }
 206   2          else
 207   2          {
 208   3            Reset_IO(MOTER_PORT,MOTER_PIN);
 209   3          }
 210   2        }
 211   1        if(sDeviceInfoEE.sDevInfBit.TimerGrp3En == Enable)
 212   1        {
 213   2          if((GlabalTimeCnt>sDeviceInfoEE.TimerGrp3) && (GlabalTimeCnt<(sDeviceInfoEE.TimerGrp3_Time+sDeviceInfoEE
             -.TimerGrp3)))
 214   2          {
 215   3            Set_IO(MOTER_PORT,MOTER_PIN);
 216   3          }
 217   2          else
 218   2          {
 219   3            Reset_IO(MOTER_PORT,MOTER_PIN);
 220   3          }
 221   2        }
 222   1      }
 223          
 224          void MoterContr()
 225          {
 226   1        static bit MotorStarFlg = 0;
 227   1        static xdata INT16U FaultStrMotor = 0;
 228   1        
 229   1        AtituCtrMotor();
 230   1      
 231   1        TimeCtrMotor();
 232   1          
 233   1          if(FaultChk(EEPROM_READ_FALI) != NO_FAULT)  //if eeprom read fail,40s later start motor
 234   1          {
 235   2          FaultStrMotor++;
 236   2      
 237   2          if((FaultStrMotor > 300) && (FaultStrMotor < 900))
C51 COMPILER V9.51   USERTASK                                                              06/07/2018 15:04:25 PAGE 5   

 238   2          {
 239   3            Set_IO(MOTER_PORT,MOTER_PIN);
 240   3          }
 241   2          else if(FaultStrMotor >= 900)
 242   2          {
 243   3            FaultStrMotor  = 900;
 244   3            Reset_IO(MOTER_PORT,MOTER_PIN);
 245   3          }
 246   2        }
 247   1        
 248   1        if(NeedStarMotor == 1)
 249   1        {
 250   2          MotorStarFlg = 1;
 251   2          NeedStarMotor = 0;
 252   2          GlabalTimeTemp = GlabalTimeCnt;
 253   2        }
 254   1      
 255   1        if(MotorStarFlg == 1)
 256   1        {
 257   2          if(GlabalTimeCnt < (GlabalTimeTemp + StartMotorTime))
 258   2          {
 259   3            Set_IO(MOTER_PORT,MOTER_PIN);
 260   3          }
 261   2          else
 262   2          {
 263   3            MotorStarFlg = 0;
 264   3            GlabalTimeTemp = 0;
 265   3            StartMotorTime = 0;
 266   3            Reset_IO(MOTER_PORT,MOTER_PIN);
 267   3          }
 268   2        }
 269   1      }
 270          void MCU_LED_Contr()
 271          {
 272   1        static INT8U LedCnt=0;
 273   1      
 274   1        if(FaultChk(ANY_FLAULT) == NO_FAULT)
 275   1        {
 276   2          LedCnt++;
 277   2          if(LedCnt==10)
 278   2          {
 279   3              Reset_IO(MCU_LED_PORT,MCU_LED_PIN);
 280   3          }
 281   2          else if(LedCnt>=20)
 282   2          {
 283   3            LedCnt=0;
 284   3            Set_IO(MCU_LED_PORT,MCU_LED_PIN);
 285   3          }
 286   2        }
 287   1        else
 288   1        {
 289   2          LedCnt++;
 290   2          if(LedCnt==2)
 291   2          {
 292   3              Reset_IO(MCU_LED_PORT,MCU_LED_PIN);
 293   3          }
 294   2          else if(LedCnt>=4)
 295   2          {
 296   3            LedCnt=0;
 297   3            Set_IO(MCU_LED_PORT,MCU_LED_PIN);
 298   3          }
 299   2        }
C51 COMPILER V9.51   USERTASK                                                              06/07/2018 15:04:25 PAGE 6   

 300   1      }
 301          void MostAtiJuge()
 302          {
 303   1        static xdata INT8U AtiCompCnt=0;
 304   1        static xdata INT8U WrtUseBlkCnt=0;
 305   1        static xdata INT32S AtiRecorOld=0;
 306   1        static xdata INT32U GlobalTimeTem=0;
 307   1        static bit WriteUseBlk=0;
 308   1        static bit flag=0;
 309   1      
 310   1        if(sGPSDtBackUp.dwAtitude > sUserInfoEE.MostAtitu)
 311   1        {
 312   2          if(flag == 0)
 313   2          {
 314   3            flag = 1;
 315   3            AtiCompCnt = 0;
 316   3            GlobalTimeTem = GlabalTimeCnt;
 317   3          }
 318   2              else if(flag == 1)
 319   2          {
 320   3            if(GlabalTimeCnt < (GlobalTimeTem + 20))
 321   3            {
 322   4              if(AtiRecorOld != sGPSDtBackUp.dwAtitude)
 323   4              {
 324   5                AtiCompCnt++;
 325   5                if(AtiCompCnt > 3)
 326   5                {
 327   6                  flag = 0;
 328   6                  AtiCompCnt = 0;
 329   6                  sUserInfoEE.MostAtitu = sGPSDtBackUp.dwAtitude;
 330   6                  WrtUseBlkCnt = 0;
 331   6                  WriteUseBlk = 1;
 332   6                }
 333   5              }
 334   4            }
 335   3            else
 336   3            {
 337   4              flag = 0;
 338   4              AtiCompCnt = 0;
 339   4            }
 340   3          }
 341   2        }
 342   1        else
 343   1        {
 344   2          flag = 0;
 345   2          AtiCompCnt = 0;
 346   2        }
 347   1        
 348   1        if(WriteUseBlk == 1)
 349   1        {
 350   2          WrtUseBlkCnt++;
 351   2          if(WrtUseBlkCnt > 90)  //9s
 352   2          {
 353   3            WriteUseBlk = 0;
 354   3            WrtUseBlkCnt = 0;
 355   3            EprNeedWrt |= USER_BLOCK;
 356   3          }
 357   2        }
 358   1        
 359   1        AtiRecorOld = sGPSDtBackUp.dwAtitude;
 360   1      }
 361          void UserBlWriteChk()
C51 COMPILER V9.51   USERTASK                                                              06/07/2018 15:04:25 PAGE 7   

 362          {
 363   1        static xdata INT16U TenMinCnt=0; 
 364   1        static xdata INT16U FaultOld = 0;
 365   1      
 366   1        MostAtiJuge();
 367   1        
 368   1        if(TenMinCnt >= 6000)  //>600s
 369   1        {
 370   2          TenMinCnt = 0;
 371   2          sUserInfoEE.GlobalTimeRecor = GlabalTimeCnt;
 372   2          EprNeedWrt |= USER_BLOCK;
 373   2        }
 374   1        else
 375   1        {
 376   2          TenMinCnt++;
 377   2        }
 378   1      
 379   1        if((wFaultRecord != FaultOld) && (wFaultRecord != 0))
 380   1        {
 381   2          sUserInfoEE.wFaultRecord |= wFaultRecord;
 382   2          FaultOld = wFaultRecord;
 383   2          EprNeedWrt |= USER_BLOCK;
 384   2        }
 385   1      }
 386          void UserTasks(INT8U TaskNum)
 387          {
 388   1        TaskStaChk(TaskNum);
 389   1      
 390   1        TemperCtr();
 391   1      
 392   1        MoterContr();
 393   1      
 394   1        MCU_LED_Contr();
 395   1      
 396   1        UserBlWriteChk();
 397   1        
 398   1        ChkIfNeedWrtEpr();  //5s
 399   1      
 400   1        TaskPend(TaskNum);
 401   1      }
 402          
 403          
 404          
 405          
 406          
 407          
 408          
 409          
 410          
 411          
 412          
 413          
 414          
 415          
 416          
 417          
 418          
 419          
 420          
 421          
 422          
 423          
C51 COMPILER V9.51   USERTASK                                                              06/07/2018 15:04:25 PAGE 8   

 424          
 425          
 426          
 427          
 428          
 429          
 430          
 431          
 432          
 433          
 434          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1922    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     40    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      4       5
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      3    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
